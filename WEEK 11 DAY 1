Q1
Create a class Person having a single attribute: age. Now, create a functional interface with the following method in it: void find(Person p[]); Create a Demo 
class having main() method and ask the user to createa and initialize "n" Person objects (where "n" is input given by user). Now, use the lambda expression that 
will use this find() method to find out how many Persons have age greater than 25.

Input Format
Your program will take 2 types of inputs. First user input will be no. of person objects "n" to be created. Remaining user inputs will be "age" value of every 
Person object created. If value of "n" entered is less than 1, then display message "Invalid input" and no further input should be taken. Otherwise, display no.
of persons having age greater than 25.

Constraints
Value of "n" and "age" should be greater than 0. If any invalid age (e.g. -2) is entered the user, then take 18 as the default age.

Output Format
Display no. of persons having age greater than 25. If value of "n" (i.e. no. of person objects) entered is less than 1, then display message "Invalid input".

SOL





Q2

Riya asked her friend to make calculator using nested class using the following operation. 1. The outer class name is Outer_Calculator 2.
The inner class name is static Inner_Calculator with four method addition , subtraction , multiplication and division. 3. Write main method under the class of 
Outer_Calculator.
if the input is integer than display the massage as "invalid input" and if the operator is not valid operator than display the massage as "invalid operator".

Input Format
Line 1: Read 1st Number Line 2: Read 2nd Number Line 3: Read Operator

Constraints
Number n1, n2 > 0 Operator : +, -, *, / (any one)

Output Format
Display the result
